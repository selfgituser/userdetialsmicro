spring.application.name=userDetailsMicro
server.port=8081

#DB
spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/ecommerce
spring.datasource.url=jdbc:mysql://ecommerce-db.cheo4aic0dqh.us-east-2.rds.amazonaws.com:3306/ecommerce
#spring.datasource.url=jdbc:mysql://host.docker.internal:3306/ecommerce
spring.datasource.username=admin
spring.datasource.password=Ecommerce5951
spring.datasource.driver-class-name =com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql: true

#eureka.client.service-url.defaultZone = http://eurekaserverapplication:8761/eureka/

eureka.client.service-url.defaultZone = http://3.15.179.254:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=18.220.108.227
eureka.instance.hostname=18.220.108.227
eureka.instance.nonSecurePort=8081
eureka.instance.instance-id=18.220.108.227:${spring.application.name}:${server.port}


# Circuit Breaker configuration for cartDetailsMicro
resilience4j.circuitbreaker.instances.cartDetailsMicro.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.cartDetailsMicro.slidingWindowSize=10
resilience4j.circuitbreaker.instances.cartDetailsMicro.failureRateThreshold=50
resilience4j.circuitbreaker.instances.cartDetailsMicro.waitDurationInOpenState=10000ms
resilience4j.circuitbreaker.instances.cartDetailsMicro.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.cartDetailsMicro.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.cartDetailsMicro.enabled=true
resilience4j.circuitbreaker.instances.cartDetailsMicro.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.cartDetailsMicro.maxAttempts=3
resilience4j.circuitbreaker.instances.cartDetailsMicro.retryExceptions=java.lang.RuntimeException
resilience4j.circuitbreaker.instances.cartDetailsMicro.ignoreExceptions=java.lang.IllegalArgumentException


#Kafka Properties

spring.kafka.producer.bootstrap-servers=boot-gz6escim.c2.kafka-serverless.us-east-2.amazonaws.com:9098

spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.properties.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
spring.kafka.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.group-id=usercart-service-group
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-serializer=org.apache.kafka.common.serialization.StringDeserializer

management.endpoints.web.exposure.include=beans,env,info